# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  refreshToken: String!
}

type AuthRegisterResponse {
  userConfirmed: Boolean!
  message: String!
}

type CodeDeliveryDetails {
  AttributeName: String!
  DeliveryMedium: String!
  Destination: String!
}

type ForgotPaswordResponse {
  CodeDeliveryDetails: CodeDeliveryDetails!
}

type StandardResponseAuth {
  status: String!
}

type Room {
  id: Int!
  type: String!
  view: String!
  basePrice: Int!
  maxCapacity: Int!
  isDeleted: Boolean!
  createdAt: DateTime!
  reservations: [Reservation!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Reservation {
  id: ID!
  checkIn: DateTime!
  checkOut: DateTime!
  people: Float!
  roomId: Float!
  userId: String!
  totalPrice: Float!
  status: String!
  allInclusive: Boolean!
  createdAt: DateTime!
  room: Room!

  """Number of days in the reservation"""
  daysCount: Float!

  """Number of nights in the reservation"""
  nightsCount: Float!

  """Base value applied to the reservation"""
  baseValue: Float!

  """Total weekend increment applied"""
  weekendIncrement: Float!

  """Total discount for days"""
  daysDiscount: Float!

  """Total for all inclusive"""
  allInclusiveTotal: Float!
}

type PaginatedReservations {
  """Past reservations"""
  past: [Reservation!]!

  """Current reservations"""
  current: [Reservation!]!

  """Future reservations"""
  future: [Reservation!]!

  """Total count of past reservations"""
  totalPast: Float!

  """Total count of current reservations"""
  totalCurrent: Float!

  """Total count of future reservations"""
  totalFuture: Float!
}

type AvailableRoomResult {
  room: Room!

  """Number of days in the reservation"""
  daysCount: Float!

  """Number of nights in the reservation"""
  nightsCount: Float!

  """Base value applied to the reservation"""
  baseValue: Float!

  """Total weekend increment applied"""
  weekendIncrement: Float!

  """Total discount for days"""
  daysDiscount: Float!

  """Total for all inclusive"""
  allInclusiveTotal: Float!

  """Total price for the stay"""
  totalPrice: Float!
}

type PagedAvailableRoomResult {
  items: [AvailableRoomResult!]!
  total: Int!
  offset: Int!
  limit: Int!
  hasMore: Boolean!
}

type Query {
  hello: String!
  reservation(id: String!): Reservation!
  reservations(offset: Int = 0, limit: Int = 10): PaginatedReservations!

  """Get all room types"""
  roomTypes: [String!]!

  """Get available rooms based on criteria with pagination"""
  availableRooms(checkIn: DateTime!, checkOut: DateTime!, people: Float!, roomType: RoomType, exteriorViewOnly: Boolean = false, allInclusive: Boolean = false, offset: Int = 0, limit: Int = 10): PagedAvailableRoomResult!
}

"""The available room types"""
enum RoomType {
  SENCILLA
  DOBLE
  PRESIDENCIAL
}

type Mutation {
  signup(signupInput: RegisterInput!): AuthRegisterResponse!
  login(loginUserInput: LoginInput!): AuthResponse!
  changePassword(changePasswordInput: ChangePasswordInput!): StandardResponseAuth!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): ForgotPaswordResponse!
  confirmPassword(confirmPasswordInput: ConfirmPasswordInput!): StandardResponseAuth!
  createReservation(createReservationInput: CreateReservationInput!): Reservation!
  cancelReservation(id: String!): Reservation!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input ChangePasswordInput {
  email: String!
  currentPassword: String!
  newPassword: String!
}

input ForgotPasswordInput {
  email: String!
}

input ConfirmPasswordInput {
  email: String!
  confirmationCode: String!
  newPassword: String!
}

input CreateReservationInput {
  checkIn: DateTime!
  checkOut: DateTime!
  people: Float!
  roomType: RoomType!
  allInclusive: Boolean!
}